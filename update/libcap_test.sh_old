check_liblink () {
  rpm -qf $(ldd $(which $@) | awk '/libcap/{print $3}')
}

assert_null () {
  if [ -z "$1" ]; then
    echo "PASS"
  else
    echo "FAIL"
  fi
}

assert_equal () {
  if [ "$1" = "$2" ]; then
    echo "PASS";
  else
    echo "FAIL";
  fi
}

assert_match () {
  mesg=$1
  shift;
  if echo "$mesg" | grep "$@"; then
     echo "PASS"
  else
     echo "FAIL"
  fi
}

getcap_val () {
  getcap $1 | awk '{print $3}'
}

user_del () {
   userdel -r testme
}


check_liblink getcap
check_liblink setcap

echo hi > test
assert_null $(getcap test)

cap="cap_net_raw+ep"
setcap $cap test
assert_equal $cap $(getcap_val test)

setcap -r test
assert_null $(getcap test)

pingcap=$(getcap /usr/bin/ping)
useradd -m -G users -s /bin/bash testme
trap user_del 0

sudo -u testme cp /usr/bin/ping /home/testme/
mesg=$(sudo -u testme /home/testme/ping -c 2 google.com 2>&1)

assert_match "$mesg" "Operation not permitted" 


assert_null $(getcap /home/testme/ping)

cap="cap_net_raw+ep"
setcap $cap /home/testme/ping

assert_equal $cap $(getcap_val /home/testme/ping)

pingval=$(sudo -u testme /home/testme/ping -c 2 google.com)
assert_match "$pingval" "bytes from"

